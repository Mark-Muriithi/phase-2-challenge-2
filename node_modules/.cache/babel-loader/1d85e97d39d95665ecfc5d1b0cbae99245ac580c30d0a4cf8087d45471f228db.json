{"ast":null,"code":"var _jsxFileName = \"/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/YourBotArmy.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourBotArmy = ({\n  army,\n  onRelease,\n  onDischarge\n}) => {\n  const isBotEnlisted = botId => {\n    return army.some(bot => bot.id === botId);\n  };\n  const handleRelease = botId => {\n    if (isBotEnlisted(botId)) {\n      fetch(`http://localhost:8000/bots/${botId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: 'released'\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to release bot');\n        }\n        onRelease(botId);\n      }).catch(error => console.error('Error releasing bot:', error));\n    }\n  };\n  const handleDischarge = botId => {\n    if (isBotEnlisted(botId)) {\n      fetch(`http://localhost:8000/bots/${botId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: 'discharged'\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to discharge bot');\n        }\n        onDischarge(botId);\n      }).catch(error => console.error('Error discharging bot:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"your-bot-army\",\n    children: army.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.avatar_url,\n        alt: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: bot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bot.catchphrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2764\\uFE0F \", bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2764\\uFE0F\\u200D\\uD83E\\uDE79 \", bot.damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDEE1\\uFE0F \", bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRelease(bot.id),\n        children: \"Release\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDischarge(bot.id),\n        children: \"Discharge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","YourBotArmy","army","onRelease","onDischarge","isBotEnlisted","botId","some","bot","id","handleRelease","fetch","method","headers","body","JSON","stringify","status","then","response","ok","Error","catch","error","console","handleDischarge","className","children","map","src","avatar_url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","catchphrase","health","damage","armor","onClick","_c","$RefreshReg$"],"sources":["/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/YourBotArmy.jsx"],"sourcesContent":["import React from 'react';\n\nconst YourBotArmy = ({ army, onRelease, onDischarge }) => {\n\n  const isBotEnlisted = (botId) => {\n    return army.some(bot => bot.id === botId);\n  };\n\n  const handleRelease = (botId) => {\n    if (isBotEnlisted(botId)) {\n      fetch(`http://localhost:8000/bots/${botId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status: 'released' }),\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to release bot');\n        }\n        onRelease(botId);\n      })\n      .catch(error => console.error('Error releasing bot:', error));\n    }\n  };\n\n  const handleDischarge = (botId) => {\n    if (isBotEnlisted(botId)) {\n      fetch(`http://localhost:8000/bots/${botId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status: 'discharged' }),\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to discharge bot');\n        }\n        onDischarge(botId);\n      })\n      .catch(error => console.error('Error discharging bot:', error));\n    }\n  };\n\n  return (\n    <div className='your-bot-army'>\n      {army.map((bot) => (\n        <div key={bot.id} className='bot-card'>\n          <img src={bot.avatar_url} alt={bot.name} />\n          <div className='bot-details'>\n            <h2>{bot.name}</h2>\n            <p>{bot.catchphrase}</p>\n            <p>‚ù§Ô∏è {bot.health}</p>\n            <p>‚ù§Ô∏è‚Äçü©π {bot.damage}</p>\n            <p>üõ°Ô∏è {bot.armor}</p>\n          </div>\n          <button onClick={() => handleRelease(bot.id)}>Release</button>\n          <button onClick={() => handleDischarge(bot.id)}>Discharge</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default YourBotArmy;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}