{"ast":null,"code":"var _jsxFileName = \"/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [army, setArmy] = useState([]);\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    if (bots.length === 0) {\n      fetch('http://localhost:8000/bots').then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch bot data');\n        }\n        return response.json();\n      }).then(data => {\n        setBots(data);\n      }).catch(error => {\n        console.error('Error fetching bot data:', error);\n      });\n    }\n  }, [bots]);\n  function onAddToArmy(bot) {\n    setArmy(prevArmy => [...prevArmy, bot]);\n  }\n  const handleReleaseFromArmy = botId => {\n    setArmy(prevArmy => prevArmy.filter(b => b.id !== botId));\n  };\n  const handleDischarge = botId => {\n    fetch(`http://localhost:8000/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setArmy(prevArmy => prevArmy.filter(b => b.id !== botId));\n    }).catch(error => console.error('Error discharging bot:', error));\n  };\n  const handleEnlist = bot => {\n    setArmy(prevArmy => [...prevArmy, bot]);\n    fetch('http://localhost:8000/bots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bot)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to enlist bot');\n      }\n      return response.json();\n    }).then(data => {\n      onAddToArmy(data);\n    }).catch(error => console.error('Error enlisting bot:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      army: army,\n      onRelease: handleReleaseFromArmy,\n      onDischarge: handleDischarge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      army: army,\n      onAddToArmy: onAddToArmy,\n      onEnlist: handleEnlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"AXZARZRyd2QhYQcb1uVGTxf51nc=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","HomePage","_s","army","setArmy","bots","setBots","length","fetch","then","response","ok","Error","json","data","catch","error","console","onAddToArmy","bot","prevArmy","handleReleaseFromArmy","botId","filter","b","id","handleDischarge","method","handleEnlist","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onRelease","onDischarge","onEnlist","_c","$RefreshReg$"],"sources":["/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nconst HomePage = () => {\n  const [army, setArmy] = useState([]);\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    if (bots.length === 0) {\n      fetch('http://localhost:8000/bots')\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Failed to fetch bot data');\n          }\n          return response.json();\n        })\n        .then((data) => {\n          setBots(data);\n        })\n        .catch((error) => {\n          console.error('Error fetching bot data:', error);\n        });\n    }\n  }, [bots]);\n\n  function onAddToArmy(bot) {\n    setArmy(prevArmy => [...prevArmy, bot]);\n  }\n\n  const handleReleaseFromArmy = (botId) => {\n    setArmy((prevArmy) => prevArmy.filter((b) => b.id !== botId));\n  };\n\n  const handleDischarge = (botId) => {\n    fetch(`http://localhost:8000/bots/${botId}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        setArmy((prevArmy) => prevArmy.filter((b) => b.id !== botId));\n      })\n      .catch(error => console.error('Error discharging bot:', error));\n  };\n\n  const handleEnlist = (bot) => {\n    setArmy((prevArmy) => [...prevArmy, bot]);\n    fetch('http://localhost:8000/bots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(bot),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to enlist bot');\n        }\n        return response.json();\n      })\n      .then(data => {\n        onAddToArmy(data);\n      })\n      .catch(error => console.error('Error enlisting bot:', error));\n  };\n\n  return (\n    <div>\n      <h1>Your Bot Army</h1>\n      <YourBotArmy army={army} onRelease={handleReleaseFromArmy} onDischarge={handleDischarge} />\n      <h1>Bot Collection</h1>\n      <BotCollection bots={bots} army={army} onAddToArmy={onAddToArmy} onEnlist={handleEnlist}/>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}