{"ast":null,"code":"var _jsxFileName = \"/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/BotSpecs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotSpecs = ({\n  onAddToArmy\n}) => {\n  _s();\n  const {\n    botId\n  } = useParams();\n  const [bot, setBot] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8000/bots/${botId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch bot details');\n      }\n      return response.json();\n    }).then(data => setBot(data)).catch(error => console.error('Error fetching bot details:', error));\n  }, [botId]);\n  const handleClick = bot => {\n    fetch('http://localhost:8000/bots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bot)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to enlist bot');\n      }\n      return response.json();\n    }).then(data => {\n      onAddToArmy(data);\n    }).catch(error => console.error('Error enlisting bot:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: bot ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.avatar_url,\n        alt: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bot.bot_class\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Health: \", bot.health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Damage: \", bot.damage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Armor: \", bot.armor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Catchphrase: \", bot.catchphrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created at : \", bot.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Updated at: \", bot.updated_at, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 35\n        }, this)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BotSpecs, \"feHE6KnzD+P/G2O1Y3U+tsjXZAw=\", false, function () {\n  return [useParams];\n});\n_c = BotSpecs;\nexport default BotSpecs;\nvar _c;\n$RefreshReg$(_c, \"BotSpecs\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","BotSpecs","onAddToArmy","_s","botId","bot","setBot","fetch","then","response","ok","Error","json","data","catch","error","console","handleClick","method","headers","body","JSON","stringify","children","src","avatar_url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","bot_class","health","damage","armor","catchphrase","created_at","updated_at","to","id","_c","$RefreshReg$"],"sources":["/home/mashi/Moringa/phase-2/phase-2-code-challenge/src/components/BotSpecs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nconst BotSpecs = ({ onAddToArmy }) => {\n  const { botId } = useParams();\n  const [bot, setBot] = useState(null);\n  \n  useEffect(() => {\n    fetch(`http://localhost:8000/bots/${botId}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch bot details');\n        }\n        return response.json();\n      })\n      .then(data => setBot(data))\n      .catch(error => console.error('Error fetching bot details:', error));\n  }, [botId])\n\n  const handleClick = (bot) => {\n    fetch('http://localhost:8000/bots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(bot),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to enlist bot');\n        }\n        return response.json();\n      })\n      .then(data => {\n        onAddToArmy(data);\n      })\n      .catch(error => console.error('Error enlisting bot:', error));\n  };\n\n  return (\n    <div>\n    {bot ? (\n      <>\n        <img src={bot.avatar_url} alt={bot.name} />\n        <h2>{bot.name}</h2>\n        <p>{bot.bot_class}</p>\n        <p>Health: {bot.health}</p>\n        <p>Damage: {bot.damage}</p>\n        <p>Armor: {bot.armor}</p>\n        <p>Catchphrase: {bot.catchphrase}</p>\n        <p>Created at : {bot.created_at}</p>\n        <p>Updated at: {bot.updated_at} </p>\n        <Link to=\"/\" key={bot.id}><button>Go back</button></Link>\n      </>\n    ) : (\n      <p>Loading...</p>\n    )}\n  </div>\n  )\n};\n\nexport default BotSpecs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}